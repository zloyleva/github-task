{"version":3,"sources":["Layout/Header/index.js","Layout/Main/index.js","store/actions.js","components/TodoList/index.js","components/AddTodoForm/index.js","App.js","serviceWorker.js","store/todoReducer.js","store/reducer.js","index.js"],"names":["withStyles","root","flexGrow","marginBottom","props","react_default","a","createElement","className","classes","AppBar_default","position","color","Toolbar_default","Typography_default","variant","CenteredTabs","state","value","handleChange","event","_this","setState","Paper_default","square","this","Tabs_default","onChange","indicatorColor","textColor","centered","Tab_default","label","React","Component","addNewTodo","todo","console","log","type","payload","setDoneItem","key","removeItem","TodoList","createTodoListElements","data","_this$props","map","el","i","name","done","onClick","todos","connect","Object","objectSpread","dispatch","bindActionCreators","AddTodoForm","direction","justify","alignItems","todoTitle","changeTodoTitleHandler","e","target","submitHandler","preventDefault","reset","_this2","_this$state","Grid_default","container","item","xs","spacing","paper","noValidate","autoComplete","onSubmit","TextField_default","id","defaultValue","textField","margin","Button_default","button","theme","padding","unit","textAlign","palette","text","secondary","marginLeft","marginRight","width","App","Header","components_AddTodoForm","Main","components_TodoList","Boolean","window","location","hostname","match","initialState","remote","arguments","length","undefined","action","concat","toConsumableArray","index","combineReducers","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04e830ae.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n\troot: {\n\t\tflexGrow: 1,\n\t\tmarginBottom: '30px'\n\t},\n};\n\nconst header = props => (\n\t<div className={props.classes.root}>\n\t\t<AppBar position=\"static\" color=\"default\">\n\t\t\t<Toolbar>\n\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\n\t\t\t\t\tTodo manager\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t</div>\n);\n\nexport default withStyles(styles)(header);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = {\n\troot: {\n\t\tflexGrow: 1,\n\t},\n};\n\nclass CenteredTabs extends React.Component {\n\tstate = {\n\t\tvalue: 0,\n\t};\n\t\n\thandleChange = (event, value) => {\n\t\tthis.setState({ value });\n\t};\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Paper square className={this.props.classes.root} >\n\t\t\t\t<Tabs\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\tcentered\n\t\t\t\t>\n\t\t\t\t\t<Tab label=\"All\" />\n\t\t\t\t\t<Tab label=\"Done\" />\n\t\t\t\t\t<Tab label=\"Remove\" />\n\t\t\t\t</Tabs>\n\t\t\t</Paper>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(CenteredTabs);","export const ACTION_ADD_TODO = \"ACTION_ADD_TODO\";\nexport const ACTION_SET_TODO_DONE = \"ACTION_SET_TODO_DONE\";\nexport const ACTION_REMOVE_TODO = \"ACTION_REMOVE_TODO\";\n\nexport const addNewTodo = (todo) => {\n\tconsole.log(todo);\n\treturn {\n\t\ttype: ACTION_ADD_TODO,\n\t\tpayload: todo\n\t}\n};\n\nexport const setDoneItem = (key) => {\n\tconsole.log(key);\n\treturn {\n\t\ttype: ACTION_SET_TODO_DONE,\n\t\tpayload: key\n\t}\n};\n\nexport const removeItem = (key) => {\n\treturn {\n\t\ttype: ACTION_REMOVE_TODO,\n\t\tpayload: key\n\t}\n};","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\n\nimport {bindActionCreators} from \"redux\";\nimport {setDoneItem, removeItem} from \"../../store/actions\";\n\nclass TodoList extends Component{\n\t\n\trender() {\n\t\tconst {todos} = this.props;\n\t\t\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{this.createTodoListElements(todos)}\n\t\t\t</ul>\n\t\t)\n\t}\n\t\n\tcreateTodoListElements = (data) => {\n\t\tconst {setDoneItem,removeItem} = this.props;\n\t\treturn data.map((el, i) => (\n\t\t\t<li key={i}>\n\t\t\t\t{el.name} { el.done?\"DONE\":\"\" }\n\t\t\t\t<button onClick={() => {setDoneItem(i)}}>Done</button>\n\t\t\t\t<button onClick={() => {removeItem(i)}}>Remove</button>\n\t\t\t</li>\n\t\t))\n\t};\n}\n\nconst mapStateToProps = (state) => {\n\treturn {...state};\n};\nconst mapActionsToProps = (dispatch) => {\n\treturn {\n\t\tsetDoneItem: bindActionCreators(setDoneItem, dispatch),\n\t\tremoveItem: bindActionCreators(removeItem, dispatch),\n\t}\n};\n\nexport default connect(mapStateToProps,mapActionsToProps)(TodoList);","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nimport {addNewTodo} from \"../../store/actions\";\n\nconst styles = theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tmarginBottom: 30\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing.unit * 2,\n\t\ttextAlign: 'center',\n\t\tcolor: theme.palette.text.secondary,\n\t},\n\ttextField: {\n\t\tmarginLeft: theme.spacing.unit,\n\t\tmarginRight: theme.spacing.unit,\n\t\twidth: \"100%\",\n\t},\n});\nclass AddTodoForm extends Component{\n\tstate = {\n\t\tdirection: 'row',\n\t\tjustify: 'center',\n\t\talignItems: 'center',\n\t\ttodoTitle: \"\"\n\t};\n\t\n\trender() {\n\t\tconst {addNewTodo,classes} = this.props;\n\t\tconst { alignItems, direction, justify, todoTitle } = this.state;\n\t\t\n\t\treturn (\n\t\t\t<Grid container className={classes.root}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tspacing={16}\n\t\t\t\t\t\talignItems={alignItems}\n\t\t\t\t\t\tdirection={direction}\n\t\t\t\t\t\tjustify={justify}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper square className={classes.paper} >\n\t\t\t\t\t\t\t\t<form className={classes.container} noValidate autoComplete=\"off\" onSubmit={(event) => {\n\t\t\t\t\t\t\t\t\t\tthis.submitHandler(event, addNewTodo)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\tspacing={24}\n\t\t\t\t\t\t\t\t\t\talignItems={alignItems}\n\t\t\t\t\t\t\t\t\t\tdirection={direction}\n\t\t\t\t\t\t\t\t\t\tjustify={justify}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"standard-uncontrolled\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Todo title\"\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={todoTitle}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeTodoTitleHandler}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n\t\t\t\t\t\t\t\t\t\t\t\tPrimary\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n\t\n\tchangeTodoTitleHandler = (e) => {\n\t\tthis.setState({\n\t\t\ttodoTitle: e.target.value\n\t\t})\n\t};\n\t\n\tsubmitHandler = (event,addNewTodo) => {\n\t\tevent.preventDefault();\n\t\taddNewTodo(this.state.todoTitle);\n\t\tevent.target.reset();\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {...state};\n};\nconst mapActionsToProps = (dispatch) => {\n\treturn {\n\t\taddNewTodo: bindActionCreators(addNewTodo, dispatch),\n\t\t// addNewTodo: (data) => dispatch(addNewTodo(data)),\n\t}\n};\n\nexport default withStyles(styles)(connect(mapStateToProps,mapActionsToProps)(AddTodoForm));","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Layout/Header';\nimport Main from './Layout/Main';\nimport TodoList from \"./components/TodoList\";\nimport AddTodoForm from './components/AddTodoForm'\n\nclass App extends Component {\n  render() {\n    const {todos} = this.props;\n    return (\n      <div className=\"App\">\n\t\n\t      <Header/>\n\t\n\t      <AddTodoForm />\n\t      \n\t      <Main/>\n\t\n\t      \n\t\n\t      <TodoList/>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ACTION_ADD_TODO, ACTION_REMOVE_TODO, ACTION_SET_TODO_DONE} from \"./actions\";\n\nconst initialState = [\n\t{name: \"Wake up\", done: false, remote: false}\n];\nconst todos  = (state=initialState,action) => {\n\tconsole.log(action)\n\tswitch (action.type) {\n\t\tcase ACTION_ADD_TODO:\n\t\t\treturn [\n\t\t\t\t...state, {name:action.payload, done: false, remote: false}\n\t\t\t];\n\t\tcase ACTION_SET_TODO_DONE:\n\t\t\treturn [...state.map((el, index) => (index === action.payload?{...el, done:true}:el))];\n\t\tcase ACTION_REMOVE_TODO:\n\t\t\treturn [...state.map((el, index) => (index === action.payload?{...el, remote:true}:el))];\n\t}\n\t\n\treturn state;\n};\n\nexport default todos;","import { combineReducers } from 'redux'\nimport todos from './todoReducer'\n// import modifyReducer from './modifyTodoReducer'\n\nexport default combineReducers({\n\ttodos,\n\t// modifyReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\n\nimport reducer from \"./store/reducer\";\n\nimport 'typeface-roboto';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}